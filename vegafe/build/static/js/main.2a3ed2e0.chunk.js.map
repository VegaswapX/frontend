{"version":3,"sources":["featurs/web3/WrappedWeb3ReactProvider.js","eth.js","Constant/Contracts.js","Components/Balance/Balance.js","Components/Pools/Pool.js","connectors/connectors.js","hooks/useEagerConnect.js","hooks/useInactiveListener.js","featurs/web3/Web3ConnectionManager.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["getLibrary","provider","library","Web3Provider","pollingInterval","WrappedWeb3ReactProvider","children","getContract","address","ABI","account","Contract","getSigner","connectUnchecked","getProviderOrSigner","useContract","withSignerIfPossible","useWeb3React","useMemo","undefined","error","console","injected","InjectedConnector","supportedChainIds","VEGA_TOKEN_ADDRESS","POOL_TOKEN_ADDRESS","Vgabalance","chainId","vegaContract","VEGA_CONTRACT_ABI","React","useState","vgabal","setVgaBalance","useEffect","stale","callStatic","balanceOf","then","x","catch","Balance","balance","setBalance","getBalance","z","ethers","utils","formatEther","role","src","alt","PoolInfo","poolContract","POOL_CONTRACT_ABI","poolStaked","setPoolstaked","poolYield","setMaxyield","startTime","setStartTime","endTime","setEndTime","totalAmountStaked","setTotalAmountStaked","maxYield","PoolStake","vgaallow","setVgaAllowance","loading","setLoading","approve","a","log","approveAmount","parseEther","stake","stakeAmount","allowance","Row","Col","className","Button","variant","onClick","CHAINS","BSCTESTNET","RPC_URLS","process","Object","values","network","NetworkConnector","urls","fromEntries","map","i","defaultChainId","useEagerConnect","activate","active","tried","setTried","isAuthorized","useInactiveListener","suppress","ethereum","window","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","Web3ConnectionManager","context","connector","triedEager","routes","path","name","Component","Container","Card","style","width","height","Header","Body","Text","InnerApp","deactivate","ex","Navbar","bg","Nav","Brand","href","route","Link","as","NavLink","to","activeClassName","exact","disabled","marginTop","match","CSSTransition","in","timeout","classNames","unmountOnExit","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a3ed2e0.chunk.js","sourcesContent":["import { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport React from \"react\";\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nfunction WrappedWeb3ReactProvider({ children }) {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>{children}</Web3ReactProvider>\n  );\n}\n\nexport default WrappedWeb3ReactProvider;\n","import Web3 from \"web3\";\nimport { useMemo } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\n// account is optional\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\n// account is optional\nexport function getContract(address, ABI, library, account) {\n  // if (!isAddress(address) || address === AddressZero) {\n  //   throw Error(`Invalid 'address' parameter '${address}'.`);\n  // }\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\n\nexport const useContract = (address, ABI, withSignerIfPossible = true) => {\n  const { account, library } = useWeb3React();\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(\n        address,\n        ABI,\n        library,\n        withSignerIfPossible && account ? account : undefined\n      );\n    } catch (error) {\n      console.error(\"Failed to get contract\", error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n};\n\n// const BSC_MAINNET = 56;\nconst BSC_TESTNET = 97;\nconst LCOAL_NET = 1337\nexport const injected = new InjectedConnector({\n  supportedChainIds: [BSC_TESTNET, LCOAL_NET],  \n});\n\n// https://assets.coingecko.com/coins/images/18397/small/big_logo.png?1631769696\n\nexport const getEthereum = async () => {\n  // event listener is not reliable\n  while (document.readyState !== \"complete\") {\n    await new Promise((resolve) => setTimeout(resolve, 100));\n  }\n\n  return window.ethereum;\n};\n\n//TODO remove?\nexport const getWeb3 = async () => {\n  const ethereum = await getEthereum();\n  let web3;\n\n  if (ethereum) {\n    web3 = new Web3(ethereum);\n  } else if (window.web3) {\n    web3 = window.web3;\n  } else {\n    //TODO\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n    web3 = new Web3(provider);\n  }\n\n  return web3;\n};\n","// export const contractMap = {\n//     1337: {\n//         \"VEGA_TOKEN\": \"0xc8ebbB8Ea5c9bd5B22e4f4f3570765eBFd52Da26\",\n//         \"BOOSTPOOL\": \"0x00b6E2f5Eb7563Ae17f6fE15eB8D42C462fC276d\"\n//     }\n// }\n\n//local\n// export const VEGA_TOKEN_ADDRESS = \"0xc8ebbB8Ea5c9bd5B22e4f4f3570765eBFd52Da26\";\n// export const POOL_TOKEN_ADDRESS = \"0x00b6E2f5Eb7563Ae17f6fE15eB8D42C462fC276d\";\n\n//testnet\nexport const VEGA_TOKEN_ADDRESS = \"0x3a81fE3E78B612Fd3c3E55944c5f642504236572\";\nexport const POOL_TOKEN_ADDRESS = \"0x686095a66F4F82032B2fc7408c7F531708676e57\";","import React from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport VEGA_CONTRACT_ABI from \"../../abis/erc20.json\";\nimport { useContract } from \"../../eth.js\";\nimport { VEGA_TOKEN_ADDRESS, POOL_TOKEN_ADDRESS } from \"../../Constant/Contracts.js\";\nimport { formatEther } from \"@ethersproject/units\";\n\nexport const formatCurrency = (balance) => {\n  return balance ? formatEther(balance) : \"0\";\n\n  //   if(currency === TCurrency.ETHER) {\n  //     return balance ? formatEther(balance) : '0';\n  //   }\n  //   if(currency === TCurrency.WEI) {\n  //     return balance ? balance.toString() : '0';\n  //   }\n  //   return balance ? formatEther(balance) : '0';\n};\n\nexport function Vgabalance() {\n  const { account, library, chainId } = useWeb3React();\n\n  //CONTRACT_MAP[\"BoostPool\"]\n  //contractMap[chainId][\"VEGA_TOKEN\"],\n  const vegaContract = useContract(VEGA_TOKEN_ADDRESS, VEGA_CONTRACT_ABI, true);\n\n  // const [loading, setLoading] = useState(false);\n\n  const [vgabal, setVgaBalance] = React.useState();\n\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n\n      vegaContract.callStatic\n        .balanceOf(account)\n        .then((x) => {\n          if (!stale) {\n            //   let z = ethers.utils.formatEther(x);\n            x = x / 10 ** 18;\n            setVgaBalance(x);\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setVgaBalance(null);\n          }\n        });\n\n      return () => {\n        stale = true;\n        setVgaBalance(undefined);\n      };\n    }\n  }, [account, library, chainId, vegaContract]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      {/* <span>VGA Balance {vgabalance}</span> */}\n      <span>\n        VGA balance: {vgabal === null ? \"Error\" : vgabal ? `${vgabal}` : \"\"}\n      </span>\n    </>\n  );\n}\n\nexport function Balance() {\n  const { account, library, chainId } = useWeb3React();\n\n  const [balance, setBalance] = React.useState();\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n\n      library\n        .getBalance(account)\n        .then((balance) => {\n          if (!stale) {\n            let z = ethers.utils.formatEther(balance);\n            setBalance(z);\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBalance(null);\n          }\n        });\n\n      return () => {\n        stale = true;\n        setBalance(undefined);\n      };\n    }\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>BNB Balance</span>\n      <span role=\"img\" aria-label=\"gold\">\n        {/* <img \n        src=\"https://assets.coingecko.com/coins/images/325/small/Tether-logo.png?1598003707\"\n        alt=\"new\"\n        /> */}\n        <img\n          src=\"https://assets.coingecko.com/coins/images/825/thumb_2x/binance-coin-logo.png?1547034615\"\n          alt=\"new\"\n        />\n      </span>\n\n      {/* <span>{balance === null ? 'Error' : balance ? `${formatEther(balance)}` : ''}</span> */}\n      <span>{balance === null ? \"Error\" : balance ? `${balance}` : \"\"}</span>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport VEGA_CONTRACT_ABI from \"../../abis/erc20.json\";\nimport POOL_CONTRACT_ABI from \"../../abis/BoostPool.json\";\nimport { useContract } from \"../../eth.js\";\nimport { VEGA_TOKEN_ADDRESS, POOL_TOKEN_ADDRESS } from \"../../Constant/Contracts.js\";\n\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport {BigNumber} from \"@ethersproject/bignumber\";\nimport {parseEther} from \"ethers/lib/utils\";\n\nconst chainId = 1137;\n\nexport function PoolInfo() {\n  const { account, library } = useWeb3React();\n\n  //CONTRACT_MAP[\"BoostPool\"]\n  const vegaContract = useContract(VEGA_TOKEN_ADDRESS, VEGA_CONTRACT_ABI, true);\n\n  const poolContract = useContract(POOL_TOKEN_ADDRESS, POOL_CONTRACT_ABI, true);\n\n  // const [loading, setLoading] = useState(false);\n\n  const [poolStaked, setPoolstaked] = React.useState();\n  const [poolYield, setMaxyield] = React.useState();\n  const [startTime, setStartTime] = React.useState();\n  const [endTime, setEndTime] = React.useState();\n  const [totalAmountStaked, setTotalAmountStaked] = React.useState();\n  const [percentStaked, setPercentStaked] = React.useState();\n\n  // const [loading, setLoading] = useState(false);\n\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n\n      poolContract.callStatic\n        .totalAmountStaked()\n        .then((x) => {\n          if (!stale) {\n            setPoolstaked(x);\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setPoolstaked(null);\n          }\n        });\n\n      return () => {\n        stale = true;\n        setPoolstaked(undefined);\n      };\n    }\n  }, [account, library, chainId, vegaContract, poolContract]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n\n      poolContract.callStatic\n        .maxYield()\n        .then((x) => {\n          if (!stale) {\n            x = x / 10 ** 18;\n            setMaxyield(x);\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setMaxyield(null);\n          }\n        });\n\n      return () => {\n        stale = true;\n        setMaxyield(undefined);\n      };\n    }\n  }, [account, library, chainId, poolContract]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n\n      poolContract.callStatic\n        .startTime()\n        .then((x) => {\n          if (!stale) {\n            setStartTime(x);\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setStartTime(null);\n          }\n        });\n\n      return () => {\n        stale = true;\n        setStartTime(undefined);\n      };\n    }\n  }, [account, library, chainId, poolContract]);\n\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n\n      poolContract.callStatic\n        .totalAmountStaked()\n        .then((x) => {\n          if (!stale) {\n            setTotalAmountStaked(x);\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setTotalAmountStaked(null);\n          }\n        });\n\n      return () => {\n        stale = true;\n        setTotalAmountStaked(undefined);\n      };\n    }\n  }, [account, library, chainId, poolContract]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n\n      poolContract.callStatic\n        .endTime()\n        .then((x) => {\n          if (!stale) {\n            setEndTime(x);\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setEndTime(null);\n          }\n        });\n\n      return () => {\n        stale = true;\n        setEndTime(undefined);\n      };\n    }\n  }, [account, library, chainId, poolContract]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <div>\n      <span>\n        {/* loading={loading} */}\n        Balance in the pool\n        <br />\n        <br />\n        % of total staked\n        <br />\n        time info\n        <br />\n        duration\n        <div>\n          totalAmountStaked:{\" \"}\n          {totalAmountStaked === null\n            ? \"Error\"\n            : totalAmountStaked\n            ? `${totalAmountStaked}`\n            : \"\"}\n        </div>\n        <div>\n          percentStaked:{\" \"}\n          {totalAmountStaked === null\n            ? \"Error\"\n            : poolStaked / totalAmountStaked\n            ? `${poolStaked / totalAmountStaked}`\n            : \"\"}\n        </div>\n        <div>\n          startTime:{\" \"}\n          {startTime === null ? \"Error\" : startTime ? `${startTime}` : \"\"}\n        </div>\n        <div>\n          endTime: {endTime === null ? \"Error\" : endTime ? `${endTime}` : \"\"}\n        </div>\n        <br />\n        <div>\n          poolStaked:{\" \"}\n          {poolStaked === null ? \"Error\" : poolStaked ? `${poolStaked}` : \"\"}\n        </div>\n        <div>\n          poolYield:{\" \"}\n          {poolYield === null ? \"Error\" : poolYield ? `${poolYield}` : \"\"}\n        </div>\n      </span>\n    </div>\n  );\n}\n\nexport function PoolStake() {\n  const { account, library } = useWeb3React();\n\n  //CONTRACT_MAP[\"BoostPool\"]\n  const vegaContract = useContract(VEGA_TOKEN_ADDRESS, VEGA_CONTRACT_ABI, true);\n\n  const poolContract = useContract(POOL_TOKEN_ADDRESS, POOL_CONTRACT_ABI, true);\n\n  // const [loading, setLoading] = useState(false);\n\n  const [vgaallow, setVgaAllowance] = React.useState();\n\n  // const [poolStaked, setPoolstaked] = React.useState()\n\n  const [loading, setLoading] = useState(false);\n\n  const approve = async () => {\n    console.log(\"approve \" + loading);\n\n    setLoading(true);\n\n    try {\n      //TODO\n      let approveAmount = parseEther(\"1000\");\n      console.log(vegaContract)\n      await vegaContract.approve(POOL_TOKEN_ADDRESS, approveAmount);\n      // await depositLpToken(vegaContract, lpContract, account, amount);\n      // addToast({ title: 'Deposit Success', description: \"Successfully deposited\", type: 'TOAST_SUCCESS' });\n      // tokenBalance.refetch();\n      // lpBalance.refetch();\n    } catch (error) {\n      console.log({ error });\n      // addToast({ title: 'Deposit Token error!', description: error.message, type: 'TOAST_ERROR' });\n    } finally {\n      setLoading(false);\n      //TODO reload amount\n      console.log(\"approve done\");\n    }\n  };\n\n  const stake = async () => {\n    console.log(\"stake \" + poolContract);\n\n    setLoading(true);\n\n    try {\n      // let approveAmount = 10000 * 10**18;\n      let stakeAmount = 1000 * 10 ** 18;\n      await poolContract.stake(stakeAmount);\n      // await depositLpToken(vegaContract, lpContract, account, amount);\n      // addToast({ title: 'Deposit Success', description: \"Successfully deposited\", type: 'TOAST_SUCCESS' });\n      // tokenBalance.refetch();\n      // lpBalance.refetch();\n    } catch (error) {\n      console.log({ error });\n      // addToast({ title: 'Deposit Token error!', description: error.message, type: 'TOAST_ERROR' });\n    } finally {\n      setLoading(false);\n      console.log(\"stake done\");\n    }\n  };\n\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n\n      vegaContract.callStatic\n        .allowance(account, POOL_TOKEN_ADDRESS)\n        .then((x) => {\n          if (!stale) {\n            // let z = ethers.utils.formatEther(x);\n            setVgaAllowance(x);\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setVgaAllowance(null);\n          }\n        });\n\n      return () => {\n        stale = true;\n        setVgaAllowance(undefined);\n      };\n    }\n  }, [account, library, chainId, vegaContract]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <div>\n      <span>\n        VGA allowance:{\" \"}\n        {vgaallow === null ? \"Error\" : vgaallow ? `${vgaallow}` : \"\"}\n        <br />\n        My stake?\n        <br />\n        {/* loading={loading} */}\n        <Row>\n          <Col>\n            <input className=\"mt-4 w-100\"></input>\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col>\n            <Button variant=\"secondary\" onClick={approve}>\n              Approve\n            </Button>\n          </Col>\n          <Col className=\"d-flex justify-content-end\">\n            <Button variant=\"secondary\" onClick={stake}>\n              Stake\n            </Button>\n          </Col>\n        </Row>\n      </span>\n    </div>\n  );\n}\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { NetworkConnector } from \"@web3-react/network-connector\";\n\nconst CHAINS = {\n  BSCTESTNET: 97\n};\n\nconst RPC_URLS = {\n  [CHAINS.BSCTESTNET]: process.env.REACT_APP_RPC_URL_LOCAL || \"\",\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: Object.values(CHAINS),\n});\n\n// export const network = new NetworkConnector({\n//   urls: Object.fromEntries(Object.values(CHAINS).map(i => [i, RPC_URLS[i]])),\n//   defaultChainId: CHAINS.RINKEBY,\n// });\n\nexport const network = new NetworkConnector({\n  urls: Object.fromEntries(Object.values(CHAINS).map(i => [i, RPC_URLS[i]])),\n  defaultChainId: CHAINS.BSCTESTNET\n});\n","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\n\nimport { injected } from \"../connectors/connectors\";\n\nconst useEagerConnect = () => {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n};\n\nexport default useEagerConnect","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect } from \"react\";\n\nimport { injected } from \"../connectors/connectors\";\n\nconst useInactiveListener = (suppress = false) => {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(injected);\n      };\n      const handleChainChanged = (chainId) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = (accounts) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = (networkId) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      };\n\n      ethereum.on(\"connect\", handleConnect);\n      ethereum.on(\"chainChanged\", handleChainChanged);\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\n      ethereum.on(\"networkChanged\", handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener(\"connect\", handleConnect);\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n          ethereum.removeListener(\"networkChanged\", handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n};\n\nexport default useInactiveListener;\n","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect } from \"react\";\n\nimport { network } from \"../../connectors/connectors\";\nimport useEagerConnect from \"../../hooks/useEagerConnect\";\nimport useInactiveListener from \"../../hooks/useInactiveListener\";\n\nfunction Web3ConnectionManager({ children }) {\n  const context = useWeb3React();\n  const { connector, activate, active } = context;\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n\n  useEffect(() => {\n    if (triedEager && !active) {\n      activate(network);\n    }\n  }, [triedEager, active, connector, activate]);\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager);\n\n  return children;\n}\n\nexport default Web3ConnectionManager;\n","import React from \"react\";\n// import { useState } from \"react\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport {\n  Container,\n  Navbar,\n  Nav,\n  Button,\n  Row,\n  Col,\n  Card,\n} from \"react-bootstrap\";\nimport \"../../style/styles.css\";\n\nimport { useWeb3React } from \"@web3-react/core\";\n// import { formatEther } from '@ethersproject/units'\n\nimport WrappedWeb3ReactProvider from \"../../featurs/web3/WrappedWeb3ReactProvider\";\nimport { injected } from \"../../eth.js\";\nimport { Balance, Vgabalance } from \"../Balance/Balance.js\";\n\nimport { PoolStake, PoolInfo } from \"../Pools/Pool\";\nimport Web3ConnectionManager from \"../../featurs/web3/Web3ConnectionManager\";\n\nconst routes = [\n  { path: \"/\", name: \"BoostPools\", Component: BoostPools },\n  { path: \"/mining\", name: \"LiquidityMining\", Component: LiquidityMining },\n  { path: \"/about\", name: \"About\", Component: About },\n];\n\n// const useInput = initialValue => {\n//   const [value, setValue] = useState(initialValue);\n\n//   return {\n//     value,\n//     setValue,\n//     reset: () => setValue(\"\"),\n//     bind: {\n//       value,\n//       onChange: event => {\n//         setValue(event.target.value);\n//       }\n//     }\n//   };\n// };\n\nfunction BoostPools() {\n  // const { value, bind, reset } = useInput('');\n  // const { value } = useInput('');\n\n  return (\n    <>\n      <h1 className=\"text-center mb-5\">BoostPools</h1>\n      <Container>\n        <Row>\n          <Col>\n            <Card style={{ width: \"18rem\", height: \"100%\" }}>\n              {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n              <Card.Header>Balances</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  <Balance />\n                  <br />\n                  <Vgabalance />\n                </Card.Text>\n                {/* <Button variant=\"primary\">Go somewhere</Button> */}\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: \"18rem\", height: \"100%\" }}>\n              {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n              <Card.Header>Pool Info</Card.Header>\n              <Card.Body>\n                <PoolInfo />\n                {/* <Button variant=\"primary\">Go somewhere</Button> */}\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: \"18rem\", height: \"100%\" }}>\n              {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n              <Card.Header>Stake</Card.Header>\n              <Card.Body>\n                <PoolStake />\n                {/* <Card.Text>\n                        </Card.Text> */}\n                {/* <Button variant=\"primary\">Go somewhere</Button> */}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nfunction LiquidityMining() {\n  return (\n    <>\n      <h1>LiquidityMining</h1>\n      <p>google form</p>\n    </>\n  );\n}\n\nfunction About() {\n  return (\n    <>\n      <h1>About</h1>\n      <p>Info</p>\n    </>\n  );\n}\n\nfunction InnerApp() {\n  const { active, account, activate, deactivate } = useWeb3React();\n\n  async function connect() {\n    try {\n      await activate(injected);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function disconnect() {\n    try {\n      deactivate();\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  return (\n    <Router>\n      <>\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"ml-auto\">\n          <Nav className=\"mx-auto\">\n            <Navbar.Brand href=\"#home\">Vegaswap</Navbar.Brand>\n            {routes.map((route) => (\n              <Nav.Link\n                key={route.path}\n                as={NavLink}\n                to={route.path}\n                activeClassName=\"active\"\n                exact\n              >\n                {route.name}\n              </Nav.Link>\n            ))}\n          </Nav>\n          <Nav>\n            <Nav.Link disabled className={\"d-flex align-items-center\"}>\n              {account ? (\n                <span>\n                  Account: <b>{account}</b>\n                </span>\n              ) : (\n                <span>Not connected</span>\n              )}\n            </Nav.Link>\n            <Nav.Link className={\"nav-right\"}>\n              {account ?\n                  (<Button onClick={disconnect} variant=\"info\">\n                    Disconnect\n                  </Button>)\n                  :\n                  (<Button onClick={connect} variant=\"primary\">\n                    Connect\n                  </Button>)\n              }\n            </Nav.Link>\n          </Nav>\n        </Navbar>\n        <Container className=\"container\" style={{ marginTop: \"15px\" }}>\n          {routes.map(({ path, Component }) => (\n            <Route key={path} exact path={path}>\n              {({ match }) => (\n                <CSSTransition\n                  in={match != null}\n                  timeout={300}\n                  classNames=\"page\"\n                  unmountOnExit\n                >\n                  <div className=\"page\">\n                    <div className=\"flex flex-col items-center justify-center\">\n                      <Component />\n                    </div>\n                  </div>\n                </CSSTransition>\n              )}\n            </Route>\n          ))}\n        </Container>\n      </>\n    </Router>\n  );\n}\n\nfunction App() {\n  return (\n    <WrappedWeb3ReactProvider>\n      <Web3ConnectionManager>\n        <InnerApp />\n      </Web3ConnectionManager>\n    </WrappedWeb3ReactProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}